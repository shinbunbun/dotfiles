name: std CI/CD

on: [push, pull_request]

permissions:
  id-token: write
  contents: read

concurrency:
  group: std-${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  discover:
    outputs:
      hits: ${{ steps.discovery.outputs.hits }}
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v3
      - name: Install GNU sed
        run: |
          brew install gnu-sed
          echo "$(brew --prefix gnu-sed)/libexec/gnubin" >> $GITHUB_PATH
      - uses: nixbuild/nix-quick-install-action@master
      # - uses: nixbuild/nixbuild-action@v17
      #   with:
      #     nixbuild_ssh_key: ${{ secrets.SSH_PRIVATE_KEY }}
      #     generate_summary_for: job
      - uses: divnix/std-action/discover@main
        id: discovery

  debug:
    needs: discover
    name: Debug
    runs-on: ubuntu-latest
    steps:
      - name: Debug
        run: |
          echo "discover outputs: $(echo '${{ toJSON(fromJSON(needs.discover.outputs.hits)) }}')"

  build:
    needs: discover
    name: ${{ matrix.target.jobName }}
    runs-on: macos-latest
    # devshells.shells が空オブジェクト '{}' や空文字列 '' でなければジョブを実行
    if: fromJSON(needs.discover.outputs.hits).shells.build != '[]' &&
        fromJSON(needs.discover.outputs.hits).shells.build != ''
    strategy:
      matrix:
        target: ${{ fromJSON(needs.discover.outputs.hits).shells.build }}
    steps:
      - uses: actions/checkout@v3
      - name: Install GNU sed
        run: |
          brew install gnu-sed
          echo "$(brew --prefix gnu-sed)/libexec/gnubin" >> $GITHUB_PATH
      - uses: nixbuild/nix-quick-install-action@master
      # - uses: nixbuild/nixbuild-action@v17
      #   with:
      #     nixbuild_ssh_key: ${{ secrets.SSH_PRIVATE_KEY }}
      #     generate_summary_for: job
      - uses: divnix/std-action/run@main
      - name: List build output files
        run: ls -la
      - name: List result directory
        run: cat copylogs

  darwin-rollout:
    needs: discover
    name: ${{ matrix.target.jobName }}
    runs-on: macos-latest
    if: fromJSON(needs.discover.outputs.hits).darwinConfigurations.build != '{}' &&
      fromJSON(needs.discover.outputs.hits).darwinConfigurations.build != ''
    strategy:
      matrix:
        target: ${{ fromJSON(needs.discover.outputs.hits).darwinConfigurations.build }}
    steps:
      - uses: actions/checkout@v3
      - name: Install GNU sed
        run: |
          brew install gnu-sed
          echo "$(brew --prefix gnu-sed)/libexec/gnubin" >> $GITHUB_PATH
      - uses: nixbuild/nix-quick-install-action@master
      # - uses: nixbuild/nixbuild-action@v17
      #   with:
      #     nixbuild_ssh_key: ${{ secrets.SSH_PRIVATE_KEY }}
      #     generate_summary_for: job
      - name: echo CI env
        run: echo $CI
      - name: who
        run: who
      - uses: divnix/std-action/run@main
      - name: List build output files
        run: ls -la
      - name: Query build output path
        run: |
          out=$(nix derivation show "$actionDrv^out" | jq -r '.[].outputs.out.path')
          echo "The build output is at: $out"
      - name: Execute build output
        run: |
          nix-store --add-root "$out" --indirect
          nix-store --realise "$out"
          "$out"


  # deploy:
  #   needs: [discover, images]
  #   name: ${{ matrix.target.jobName }}
  #   runs-on: ubuntu-latest
  #   environment:
  #     name: development
  #     url: https://my.dev.example.com
  #   if: fromJSON(needs.discover.outputs.hits).deployments.apply != '{}'
  #   strategy:
  #     matrix:
  #       target: ${{ fromJSON(needs.discover.outputs.hits).deployments.apply }}
  #   steps:
  #     - uses: actions/checkout@v3
  #     - uses: nixbuild/nix-quick-install-action@master
  #     - uses: nixbuild/nixbuild-action@v17
  #       with:
  #         nixbuild_ssh_key: ${{ secrets.SSH_PRIVATE_KEY }}
  #         generate_summary_for: job
  #     - uses: DeterminateSystems/magic-nix-cache-action@main
  #     - uses: divnix/std-action/run@main
